#include "variadic_functions.h"
#include <stdio.h>
#include <stdarg.h>

/**
 * print_all - a function that prints anything
 * @format - list of arguments
 * Return: void
 */
void print_all(const char * const format, ...)
{
	va_list valist;
	unsigned int m = 0, l, n = 0;
	char *s;
	const char t_arg[] ="cifs"

	va_start(valist, format);
	while (format && format[m])
	{
		l = 0;
		while (t_arg[l])
		{
			if (format[m] == t_arg[l] && c)
			{
				printf(", ");
				break;
			}
			l++;
		}
		switch (format[m])
		{
			case 'c':
				printf("%c", va_arg(valist, int));
				break;
			case 'i':
				printf("%s%d", separator, va_arg(args, int);
				break;
			case 'f':
				printf("%s%f", separator, va_arg(args, double);
				break;
			case 's':
				s = va_arg(args, char *);
				if (s == NULL)
					s = "(nil)";
				printf("%s%s", separator, s);
				break;
			default:
				m++;
				continue;
		}
		separator = ", ";
		m++;
	}
	printf("\n");
	va_end(args);
}
